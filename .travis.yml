language: node_js
services:
  - docker

stages:
  - build
  - test
  - name: deploy
    if: branch = master

jobs:
  include:
    - name: Build docker image
      stage: build
      env:
        - DOCKER_USERNAME=lbassin
        - DOCKER_PROJECT=k8s-training
        - DOCKER_TAG=$TRAVIS_COMMIT
        - BUILD_NAME=$DOCKER_USERNAME/$DOCKER_PROJECT:$DOCKER_TAG
      script:
        - echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
        - docker build -t $BUILD_NAME .
        - docker push $BUILD_NAME

    - name: Unit tests
      stage: test
      script:
        - sh -c "return 0;"
    - name: Functional tests
      stage: test
      script:
        - sh -c "return 0;"

    - name: Deploy to k8s
      stage: deploy
      install:
        - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
        - chmod +x ./kubectl
        - sudo mv ./kubectl /usr/local/bin/kubectl
        - mkdir $HOME/.kube
        - echo $KUBE_CONFIG | base64 -d  > $HOME/.kube/config
      script:
        - echo "$K8S_CLUSTER_CERTIFICATE" | base64 --decode > cert.crt
        - kubectl --kubeconfig=/dev/null \
                  --server=$K8S_SERVER \
                  --certificate-authority=cert.crt \
                  --token=$K8S_TOKEN \
                  get pods
        - sh -c "return 0;"
